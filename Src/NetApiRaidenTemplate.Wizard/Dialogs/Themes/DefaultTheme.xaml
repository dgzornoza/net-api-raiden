<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib" >

    <!-- Images -->
    <BitmapImage x:Key="LogoImageSource" UriSource="/NetApiRaidenTemplate.Wizard;component/Resources/Images/logo-156x156.png" />

    
    <Color x:Key="Color_001">#FFFFFFFF</Color>
    <Color x:Key="Color_002">#FFECECEC</Color>
    <Color x:Key="Color_003">#FFAAAAAA</Color>
    <Color x:Key="Color_004">#FFB4B4B4</Color>
    <Color x:Key="Color_005">#FF999999</Color>
    <Color x:Key="Color_006">#FF666666</Color>
    <Color x:Key="Color_007">#FF444444</Color>
    <Color x:Key="Color_008">#FF333333</Color>
    <Color x:Key="Color_009">#FF0099FF</Color>
    <Color x:Key="Color_010">#FF388E3C</Color>
    <Color x:Key="Color_011">#FF0080D5</Color>
    <Color x:Key="Color_012">#00FFFFFF</Color>
    <Color x:Key="Color_013">#FFC8C8C8</Color>
    <Color x:Key="Color_014">#FFF4F4F4</Color>


    <Geometry x:Key="CheckMark">M 1.4059 3.6136 L 0.0909 5.099 L 3.7727 9.4091 L 11 1.318 L 9.6193 0.1364 L 3.707 6.7419 L 1.4059 3.6136 Z</Geometry>
    <Geometry x:Key="CloseIcon">M 8.7678 -0.182 L 5 3.585 L 1.2322 -0.182 L -0.182 1.2322 L 3.585 5 L -0.182 8.7678 L 1.2322 10.182 L 5 6.415 L 8.7678 10.182 L 10.182 8.7678 L 6.415 5 L 10.182 1.2322 L 8.7678 -0.182 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0 0 L 3.5 4 L 7 0 L 0 0 Z</Geometry>
    <Geometry x:Key="ScrollbarArrow">M 5 5 L 1 0 L -3 5 L 5 5 Z</Geometry>

    <FontFamily x:Key="FontFamily">#Segoe UI</FontFamily>

    <System:Double x:Key="FontSize18">18</System:Double>
    <System:Double x:Key="FontSize16">16</System:Double>
    <System:Double x:Key="FontSize12">12</System:Double>
    <System:Double x:Key="FontSize10">10</System:Double>
    <System:Double x:Key="RadiusXY">1</System:Double>
    <System:Double x:Key="DefaultStrokeThickness">1</System:Double>
    <System:Double x:Key="DefaultMinHeight">30</System:Double>

    <Thickness x:Key="DefaultPadding">6 2 6 2</Thickness>
    <Thickness x:Key="ComboBoxPadding">6 6 24 4</Thickness>
    <Thickness x:Key="DefaultBorderThickness">1 1 1 1</Thickness>

    <SolidColorBrush x:Key="TitleForegroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="SubTitleForegroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="IconBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="CheckBoxHoverBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="CheckBoxCheckedBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="CheckBoxCheckMarkBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="PlattformBackground" Opacity="0.6" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="GlyphHoverBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="GlyphPressedBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ComboGlyphHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ComboGlyphPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonHoverBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonFocusedBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonDisabledBackgroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonDisabledBorderBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ComboBoxReadOnlyBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ComboBoxReadOnlyBackgroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="ComboBoxHoverBackgroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="ComboBoxHoverBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ComboBoxActiveBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ComboBoxActiveBackgroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="ComboBoxFocusedBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="ComboBoxItemHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="ComboBoxItemFocusedBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="HScrollbarThumbBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="VScrollbarThumbBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="VScrollbarThumbHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="HScrollbarThumbHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="VScrollbarThumbPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="HScrollbarThumbPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ScrollbarBackgroundBrush" Color="{StaticResource Color_012}" />


    <Style x:Key="HeaderStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize18}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="TitleStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize18}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>

    <Style x:Key="SubTitleStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize12}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="PlatformTitleStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize10}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0 0 0 1" />
    </Style>

    <Style x:Key="PlatformTitleBackgroundStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource PlattformBackground}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="120" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Border.Padding" Value="0" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize16}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="MainGrid" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Name="Bd" Fill="{TemplateBinding Background}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle Name="hover" Opacity="0" Fill="{StaticResource ButtonHoverBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle Name="pressed" Opacity="0" Fill="{StaticResource ButtonPressedBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" />
                        <ContentControl Name="ContentControl" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="0 5 5 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="MainGrid" SnapsToDevicePixels="True">
                        <Rectangle Name="Bd" Fill="{TemplateBinding Background}" />
                        <ContentControl Name="ContentControl" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="2 0 0 0 " />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Name="MainGrid" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="checkBox" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle Name="normal" Width="20" Height="20" Opacity="1" Fill="{StaticResource CheckBoxBackgroundBrush}" />
                        <Rectangle Name="hover" Width="20" Height="20" StrokeThickness="2" Opacity="0" Fill="{StaticResource CheckBoxHoverBackgroundBrush}" Stroke="{StaticResource CheckBoxHoverBorderBrush}" />
                        <Rectangle Name="checked" Width="20" Height="20" Opacity="0" Fill="{StaticResource CheckBoxCheckedBackgroundBrush}" />
                        <Path Name="checkBox" Width="11" Height="9" Opacity="0" Stretch="Fill" UseLayoutRounding="False" Data="{StaticResource CheckMark}" Fill="{StaticResource CheckBoxCheckMarkBackgroundBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Path Name="Arrow" Width="8" Height="5" Margin="{TemplateBinding Padding}" Stretch="Fill" Data="{StaticResource ScrollbarArrow}" Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle Name="Thumb" Height="6" Margin="1" Fill="{StaticResource HScrollbarThumbBackgroundBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="grid" Width="Auto" Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle Name="Thumb" Width="6" Fill="{StaticResource VScrollbarThumbBackgroundBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ScrollbarBackgroundBrush}" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Name="Bg" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="16" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="16" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" Margin="0" Fill="{TemplateBinding Background}" />
                        <RepeatButton Name="repeatButton" HorizontalAlignment="Center" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="True" Style="{StaticResource ScrollBarButtonStyle}" />
                        <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" IsEnabled="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Name="thumb" Width="30" HorizontalAlignment="Center" Style="{StaticResource VScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Name="repeatButton1" Grid.Row="2" HorizontalAlignment="Center" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="True" RenderTransformOrigin="0.5,0.5" Style="{StaticResource ScrollBarButtonStyle}">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </UIElement.RenderTransform>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="18" />
        <Style.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                <Setter Property="Height" Value="18" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="16" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="repeatButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="repeatButton1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To="0.3" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" Fill="{TemplateBinding Background}" />
                                <RepeatButton Name="repeatButton" VerticalAlignment="Center" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="True" Opacity="1" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ScrollBarButtonStyle}">
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </RepeatButton>
                                <Track Name="PART_Track" Grid.Column="1" IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Height="30" VerticalAlignment="Center" Style="{StaticResource HScrollBarThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Name="repeatButton1" Grid.Column="2" VerticalAlignment="Center" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="True" Opacity="1" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ScrollBarButtonStyle}">
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Style="{StaticResource ScrollBarStyle}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{StaticResource ScrollBarStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="Main">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboGlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboGlyphPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Main" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="focused" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="focused" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Name="Bd" Grid.ColumnSpan="2" Fill="{StaticResource TransparentBrush}" />
                        <Rectangle Name="normal" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ComboBoxToggleButtonBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxToggleButtonBorderBrush}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle Name="hover" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxToggleButtonHoverBorderBrush}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle Name="focused" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxToggleButtonFocusedBorderBrush}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle Name="pressed" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxToggleButtonPressedBorderBrush}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Grid Column="1" HorizontalAlignment="Center">
                            <Path Name="Arrow" Width="7" Height="4" Stretch="Fill" Data="{StaticResource DownArrow}" Fill="{StaticResource GlyphBackgroundBrush}" />
                            <Path Name="ArrowSelected" Width="7" Height="4" Stretch="Fill" Visibility="Collapsed" Data="{StaticResource DownArrow}" Fill="{StaticResource ComboGlyphHoverBackgroundBrush}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize12}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Name="Main" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" To="1" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Main" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle Name="fillColor" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}" />
                        <Rectangle Name="FocusVisualElement" Visibility="Collapsed" Stroke="{StaticResource ComboBoxFocusedBorderBrush}" />
                        <Rectangle Name="CheckedBd" IsHitTestVisible="False" Visibility="Collapsed" Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}" />
                        <ContentControl Name="contentControl" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TitleForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize12}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource ComboBoxPadding}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Name="MainGrid" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="22" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="active" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Name="normal" Grid.ColumnSpan="2" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle Name="hover" Grid.ColumnSpan="2" StrokeThickness="2" Visibility="Collapsed" Fill="{StaticResource ComboBoxHoverBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxHoverBorderBrush}" />
                        <Rectangle Name="active" Grid.ColumnSpan="2" StrokeThickness="2" Visibility="Collapsed" Fill="{StaticResource ComboBoxActiveBackgroundBrush}" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxActiveBorderBrush}" />
                        <Popup Name="PART_Popup" Grid.ColumnSpan="2" Margin="1" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Name="DropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <ScrollViewer Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Fill="{Binding Background, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource ComboBoxToggleButtonStyle}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle Name="pressed" Grid.ColumnSpan="2" StrokeThickness="2" Visibility="Collapsed" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" Stroke="{StaticResource ComboBoxFocusedBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="UIElement.Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseCaptureWithin" Value="True">
                            <Setter TargetName="pressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>